/**
 * Created by vigon on 10/05/2017.
 */



module mathis{

    export module polyhedron{

        export const platonic=[
            "tetrahedron",
            "cube",
            "octahedron",
            "dodecahedron",
            "icosahedron"
        ]

        export const archimedean=[
            "truncated tetrahedron",
            "cuboctahedron",
            "truncated cube",
            "truncated octahedron",
            "rhombicuboctahedron",
            "truncated cuboctahedron",
            "snub cube",//or SnubCuboctahedron
            "icosidodecahedron",
            "truncated dodecahedron",
            "truncated icosahedron",
            "rhombicosidodecahedron",
            "truncated icosidodecahedron",
            "snub dodecahedron"//or SnubIcosidodecahedron
        ]

        export const antiprisms=[
                "square antiprism",
                "pentagonal antiprism",
                "hexagonal antiprism",
                "octagonal antiprism",
                "decagonal antiprism"
        ]

        export const johnson=[
            "square pyramid",//here
            "pentagonal pyramid",
            "triangular cupola",
            "square cupola",
            "pentagonal cupola",
            "pentagonal rotunda",
            "elongated triangular pyramid",
            "elongated square pyramid",
            "elongated pentagonal pyramid",
            "gyroelongated square pyramid",
            "gyroelongated pentagonal pyramid",
            "triangular bipyramid",//here
            "pentagonal bipyramid",//here
            "elongated triangular bipyramid",
            "elongated square bipyramid",
            "elongated pentagonal bipyramid",
            "gyroelongated square bipyramid",
            "elongated triangular cupola",
            "elongated square cupola",
            "elongated pentagonal cupola",
            "elongated pentagonal rotunda",
            "gyroelongated triangular cupola",
            "gyroelongated square cupola",
            "gyroelongated pentagonal cupola",
            "gyroelongated pentagonal rotunda",
            "gyrobifastigium",
            "triangular orthobicupola",
            "square orthobicupola",
            "square gyrobicupola",
            "pentagonal orthobicupola",
            "pentagonal gyrobicupola",
            "pentagonal orthocupolarotunda",
            "pentagonal gyrocupolarotunda",
            "pentagonal orthobirotunda",
            "elongated triangular orthobicupola",
            "elongated triangular gyrobicupola",
            "elongated square gyrobicupola",
            "elongated pentagonal orthobicupola",
            "elongated pentagonal gyrobicupola",
            "elongated pentagonal orthocupolarotunda",
            "elongated pentagonal gyrocupolarotunda",
            "elongated pentagonal orthobirotunda",
            "elongated pentagonal gyrobirotunda",
            "gyroelongated triangular bicupola",
            "gyroelongated square bicupola",
            "gyroelongated pentagonal bicupola",
            "gyroelongated pentagonal cupolarotunda",
            "gyroelongated pentagonal birotunda",
            "augmented triangular prism",
            "biaugmented triangular prism",
            "triaugmented triangular prism",
            "augmented pentagonal prism",
            "biaugmented pentagonal prism",
            "augmented hexagonal prism",
            "parabiaugmented hexagonal prism",
            "metabiaugmented hexagonal prism",
            "triaugmented hexagonal prism",
            "augmented dodecahedron",
            "parabiaugmented dodecahedron",
            "metabiaugmented dodecahedron",
            "triaugmented dodecahedron",
            "metabidiminished icosahedron",
            "tridiminished icosahedron",
            "augmented tridiminished icosahedron",
            "augmented truncated tetrahedron",
            "augmented truncated cube",
            "biaugmented truncated cube",
            "augmented truncated dodecahedron",
            "parabiaugmented truncated dodecahedron",
            "metabiaugmented truncated dodecahedron",
            "triaugmented truncated dodecahedron",
            "gyrate rhombicosidodecahedron",
            "parabigyrate rhombicosidodecahedron",
            "metabigyrate rhombicosidodecahedron",
            "trigyrate rhombicosidodecahedron",
            "diminished rhombicosidodecahedron",
            "paragyrate diminished rhombicosidodecahedron",
            "metagyrate diminished rhombicosidodecahedron",
            "bigyrate diminished rhombicosidodecahedron",
            "parabidiminished rhombicosidodecahedron",
            "metabidiminished rhombicosidodecahedron",
            "gyrate bidiminished rhombicosidodecahedron",
            "tridiminished rhombicosidodecahedron",
            "snub disphenoid",
            "snub square antiprism",
            "sphenocorona",
            "augmented sphenocorona",
            "sphenomegacorona",
            "hebesphenomegacorona",
            "disphenocingulum",
            "bilunabirotunda",
            "triangular hebesphenorotunda"
        ]


        export const prisms=[
            "triangular prism",
            "pentagonal prism",
            "hexagonal prism",
            "octagonal prism",
            "decagonal prism"
        ]



        export class Polyhedron {
            type: string
            makeLinks = true


            constructor(type: string) {
                this.type = type.toLowerCase()
            }


           static dataToMamesh(data:{vertices: number[][], faces: number[][]}):Mamesh{
               let mamesh=new Mamesh()
                /**transform data has XYZ*/
               for (let ve of data.vertices) mamesh.newVertex(new XYZ(ve[0], ve[1], ve[2]))

               /**centering data if necessary*/
               // if (data.notYetCentered) {
               //     let bary = new XYZ(0, 0, 0)
               //     let vertex: Vertex = null
               //     for (vertex of this.mamesh.vertices) bary.add(vertex.position)
               //     bary.scale(1 / this.mamesh.vertices.length)
               //     for (vertex of this.mamesh.vertices) vertex.position.substract(bary)
               // }

               /**scaling in oder that the max position norm is 1*/
               let maxNorm = Number.MIN_VALUE
               for (let vertex of mamesh.vertices) {
                   let norm = vertex.position.length()
                   if (norm > maxNorm) maxNorm = norm
               }

               for (let vertex of mamesh.vertices) {
                   vertex.position.scale(1 / maxNorm)
               }


               let oneOverLength = 0
               for (let face of data.faces) {

                   if (face.length == 3) mamesh.addATriangle(mamesh.vertices[face[0]], mamesh.vertices[face[1]], mamesh.vertices[face[2]])
                   else if (face.length == 4) mamesh.addASquare(mamesh.vertices[face[0]], mamesh.vertices[face[1]], mamesh.vertices[face[2]], mamesh.vertices[face[3]])

                   else if (face.length >= 5) {
                       let centerVertex = mamesh.newVertex(new XYZ(0, 0, 0))
                       centerVertex.markers.push(Vertex.Markers.polygonCenter)

                       /** Initialization **/
                       oneOverLength = 1 / (face.length)
                       let v = [mamesh.vertices[face[0]]]
                       let tab1 = [v[0].position]
                       let tab2 = [oneOverLength]

                       /** For each face **/
                       for (let i = 1; i < face.length; i++) {
                           v.push(mamesh.vertices[face[i]])
                           tab1.push(v[i].position)
                           tab2.push(oneOverLength)
                       }
                       geo.baryCenter(tab1, tab2, centerVertex.position)
                       for (let i = 0; i < face.length; i++)mamesh.addATriangle(v[i], v[(i + 1) % (face.length)], centerVertex)
                   }
               }

               //if (this.makeLinks) {
                   new linkModule.LinkCreaterSorterAndBorderDetecterByPolygons(mamesh).goChanging()
               //}

               return mamesh
           }



            go(): Mamesh {

                let archimedea: {vertices: number[][], faces: number[][]}[] = [];

                /**platon*/
                archimedea["tetrahedron"] = {
                    vertices: [[0, 0, 1.732051], [1.632993, 0, -0.5773503], [-0.8164966, 1.414214, -0.5773503], [-0.8164966, -1.414214, -0.5773503]],
                    faces: [[0, 1, 2], [0, 2, 3], [0, 3, 1], [1, 3, 2]]
                };
                archimedea["cube"] = {
                    vertices: [[0.0,0.0,1.224745],[1.154701,0.0,0.4082483],[-0.5773503,1.0,0.4082483],[-0.5773503,-1.0,0.4082483],[0.5773503,1.0,-0.4082483],[0.5773503,-1.0,-0.4082483],[-1.154701,0.0,-0.4082483],[0.0,0.0,-1.224745]],
                    faces: [[0,1,4,2],[0,2,6,3],[0,3,5,1],[1,5,7,4],[2,4,7,6],[3,6,7,5]]}
                archimedea["octahedron"] = {
                    vertices: [[0, 0, 1.414214], [1.414214, 0, 0], [0, 1.414214, 0], [-1.414214, 0, 0], [0, -1.414214, 0], [0, 0, -1.414214]],
                    faces: [[0, 1, 2], [0, 2, 3], [0, 3, 4], [0, 4, 1], [1, 4, 5], [1, 5, 2], [2, 5, 3], [3, 5, 4]]
                };
                archimedea["dodecahedron"] = {
                    vertices: [[0, 0, 1.070466], [0.7136442, 0, 0.7978784], [-0.3568221, 0.618034, 0.7978784], [-0.3568221, -0.618034, 0.7978784], [0.7978784, 0.618034, 0.3568221], [0.7978784, -0.618034, 0.3568221], [-0.9341724, 0.381966, 0.3568221], [0.1362939, 1, 0.3568221], [0.1362939, -1, 0.3568221], [-0.9341724, -0.381966, 0.3568221], [0.9341724, 0.381966, -0.3568221], [0.9341724, -0.381966, -0.3568221], [-0.7978784, 0.618034, -0.3568221], [-0.1362939, 1, -0.3568221], [-0.1362939, -1, -0.3568221], [-0.7978784, -0.618034, -0.3568221], [0.3568221, 0.618034, -0.7978784], [0.3568221, -0.618034, -0.7978784], [-0.7136442, 0, -0.7978784], [0, 0, -1.070466]],
                    faces: [[0, 1, 4, 7, 2], [0, 2, 6, 9, 3], [0, 3, 8, 5, 1], [1, 5, 11, 10, 4], [2, 7, 13, 12, 6], [3, 9, 15, 14, 8], [4, 10, 16, 13, 7], [5, 8, 14, 17, 11], [6, 12, 18, 15, 9], [10, 11, 17, 19, 16], [12, 13, 16, 19, 18], [14, 15, 18, 19, 17]]
                };
                archimedea["icosahedron"] = {
                    vertices: [[0, 0, 1.175571], [1.051462, 0, 0.5257311], [0.3249197, 1, 0.5257311], [-0.8506508, 0.618034, 0.5257311], [-0.8506508, -0.618034, 0.5257311], [0.3249197, -1, 0.5257311], [0.8506508, 0.618034, -0.5257311], [0.8506508, -0.618034, -0.5257311], [-0.3249197, 1, -0.5257311], [-1.051462, 0, -0.5257311], [-0.3249197, -1, -0.5257311], [0, 0, -1.175571]],
                    faces: [[0, 1, 2], [0, 2, 3], [0, 3, 4], [0, 4, 5], [0, 5, 1], [1, 5, 7], [1, 7, 6], [1, 6, 2], [2, 6, 8], [2, 8, 3], [3, 8, 9], [3, 9, 4], [4, 9, 10], [4, 10, 5], [5, 10, 7], [6, 7, 11], [6, 11, 8], [7, 10, 11], [8, 11, 9], [9, 11, 10]]
                };

                /**archimede*/
                archimedea["truncated tetrahedron"] = {
                    vertices: [[0, 0, 1.105542], [0.8528029, 0, 0.7035265], [-0.7106691, 0.4714045, 0.7035265], [0.3316456, -0.7856742, 0.7035265], [0.9949367, 0.4714045, -0.1005038], [-1.089693, 0.1571348, -0.1005038], [-0.5685352, 0.942809, -0.1005038], [-0.04737794, -1.099944, -0.1005038], [0.6159132, 0.1571348, -0.904534], [0.2842676, 0.942809, -0.5025189], [-0.758047, -0.6285394, -0.5025189], [0.09475587, -0.6285394, -0.904534]],
                    faces: [[0, 3, 1], [2, 6, 5], [4, 8, 9], [7, 10, 11], [0, 1, 4, 9, 6, 2], [0, 2, 5, 10, 7, 3], [1, 3, 7, 11, 8, 4], [5, 6, 9, 8, 11, 10]]
                };
                archimedea["truncated cube"] = {
                    vertices: [[0, 0, 1.042011], [0.5621693, 0, 0.8773552], [-0.4798415, 0.2928932, 0.8773552], [0.2569714, -0.5, 0.8773552], [0.8773552, 0.2928932, 0.4798415], [-0.9014684, 0.2071068, 0.4798415], [-0.5962706, 0.7071068, 0.4798415], [0.1405423, -0.9142136, 0.4798415], [1.017898, 0.2071068, -0.08232778], [0.7609261, 0.7071068, 0.08232778], [-1.017898, -0.2071068, 0.08232778], [-0.2810846, 1, 0.08232778], [-0.2810846, -1, 0.08232778], [0.2810846, -1, -0.08232778], [0.9014684, -0.2071068, -0.4798415], [0.2810846, 1, -0.08232778], [-0.7609261, -0.7071068, -0.08232778], [-0.8773552, -0.2928932, -0.4798415], [-0.1405423, 0.9142136, -0.4798415], [0.5962706, -0.7071068, -0.4798415], [0.4798415, -0.2928932, -0.8773552], [-0.5621693, 0, -0.8773552], [-0.2569714, 0.5, -0.8773552], [0, 0, -1.042011]],
                    faces: [[0, 3, 1], [2, 6, 5], [4, 8, 9], [7, 12, 13], [10, 17, 16], [11, 15, 18], [14, 19, 20], [21, 22, 23], [0, 1, 4, 9, 15, 11, 6, 2], [0, 2, 5, 10, 16, 12, 7, 3], [1, 3, 7, 13, 19, 14, 8, 4], [5, 6, 11, 18, 22, 21, 17, 10], [8, 14, 20, 23, 22, 18, 15, 9], [12, 16, 17, 21, 23, 20, 19, 13]]
                };
                archimedea["truncated octahedron"] = {
                    vertices: [[0, 0, 1.054093], [0.6324555, 0, 0.843274], [-0.421637, 0.4714045, 0.843274], [-0.07027284, -0.6285394, 0.843274], [0.843274, 0.4714045, 0.421637], [0.5621827, -0.6285394, 0.6324555], [-0.9135469, 0.3142697, 0.421637], [-0.2108185, 0.942809, 0.421637], [-0.5621827, -0.7856742, 0.421637], [0.9838197, 0.3142697, -0.2108185], [0.421637, 0.942809, 0.2108185], [0.7027284, -0.7856742, 0], [-0.7027284, 0.7856742, 0], [-0.9838197, -0.3142697, 0.2108185], [-0.421637, -0.942809, -0.2108185], [0.5621827, 0.7856742, -0.421637], [0.9135469, -0.3142697, -0.421637], [0.2108185, -0.942809, -0.421637], [-0.5621827, 0.6285394, -0.6324555], [-0.843274, -0.4714045, -0.421637], [0.07027284, 0.6285394, -0.843274], [0.421637, -0.4714045, -0.843274], [-0.6324555, 0, -0.843274], [0, 0, -1.054093]],
                    faces: [[0, 3, 5, 1], [2, 7, 12, 6], [4, 9, 15, 10], [8, 13, 19, 14], [11, 17, 21, 16], [18, 20, 23, 22], [0, 1, 4, 10, 7, 2], [0, 2, 6, 13, 8, 3], [1, 5, 11, 16, 9, 4], [3, 8, 14, 17, 11, 5], [6, 12, 18, 22, 19, 13], [7, 10, 15, 20, 18, 12], [9, 16, 21, 23, 20, 15], [14, 19, 22, 23, 21, 17]]
                };
                archimedea["truncated dodecahedron"] = {
                    vertices: [[0, 0, 1.014485], [0.3367628, 0, 0.9569589], [-0.2902233, 0.1708204, 0.9569589], [0.1634681, -0.2944272, 0.9569589], [0.5914332, 0.1708204, 0.806354], [-0.5963465, 0.1527864, 0.806354], [-0.4230517, 0.4472136, 0.806354], [0.1377417, -0.6, 0.806354], [0.8302037, 0.1527864, 0.5626702], [0.6667356, 0.4472136, 0.6201961], [-0.8014407, -0.0472136, 0.6201961], [-0.3477493, 0.7236068, 0.6201961], [-0.06735256, -0.8, 0.6201961], [0.2694102, -0.8, 0.5626702], [0.9618722, -0.0472136, 0.3189863], [0.5339072, 0.7236068, 0.4695912], [-0.8271671, -0.3527864, 0.4695912], [-0.9599955, -0.0763932, 0.3189863], [-0.3992021, 0.8763932, 0.3189863], [-0.09307895, 0.8944272, 0.4695912], [-0.3734757, -0.818034, 0.4695912], [0.5081808, -0.818034, 0.3189863], [0.9361459, -0.3527864, 0.1683814], [1.011448, -0.0763932, -0.0177765], [0.4824544, 0.8763932, 0.1683814], [0.2436839, 0.8944272, 0.4120653], [-0.663699, -0.6472136, 0.4120653], [-1.011448, 0.0763932, 0.0177765], [-0.5577569, 0.8472136, 0.0177765], [-0.5320305, -0.8472136, 0.1683814], [0.5577569, -0.8472136, -0.0177765], [0.7628511, -0.6472136, 0.1683814], [0.9599955, 0.0763932, -0.3189863], [0.5320305, 0.8472136, -0.1683814], [-0.9618722, 0.0472136, -0.3189863], [-0.9361459, 0.3527864, -0.1683814], [-0.7628511, 0.6472136, -0.1683814], [-0.5081808, 0.818034, -0.3189863], [-0.4824544, -0.8763932, -0.1683814], [0.3992021, -0.8763932, -0.3189863], [0.8014407, 0.0472136, -0.6201961], [0.8271671, 0.3527864, -0.4695912], [0.663699, 0.6472136, -0.4120653], [0.3734757, 0.818034, -0.4695912], [-0.8302037, -0.1527864, -0.5626702], [-0.2694102, 0.8, -0.5626702], [-0.5339072, -0.7236068, -0.4695912], [-0.2436839, -0.8944272, -0.4120653], [0.09307895, -0.8944272, -0.4695912], [0.3477493, -0.7236068, -0.6201961], [0.5963465, -0.1527864, -0.806354], [0.06735256, 0.8, -0.6201961], [-0.6667356, -0.4472136, -0.6201961], [-0.5914332, -0.1708204, -0.806354], [-0.1377417, 0.6, -0.806354], [0.4230517, -0.4472136, -0.806354], [0.2902233, -0.1708204, -0.9569589], [-0.3367628, 0, -0.9569589], [-0.1634681, 0.2944272, -0.9569589], [0, 0, -1.014485]],
                    faces: [[0, 3, 1], [2, 6, 5], [4, 8, 9], [7, 12, 13], [10, 17, 16], [11, 19, 18], [14, 22, 23], [15, 24, 25], [20, 26, 29], [21, 30, 31], [27, 35, 34], [28, 37, 36], [32, 40, 41], [33, 42, 43], [38, 46, 47], [39, 48, 49], [44, 53, 52], [45, 51, 54], [50, 55, 56], [57, 58, 59], [0, 1, 4, 9, 15, 25, 19, 11, 6, 2], [0, 2, 5, 10, 16, 26, 20, 12, 7, 3], [1, 3, 7, 13, 21, 31, 22, 14, 8, 4], [5, 6, 11, 18, 28, 36, 35, 27, 17, 10], [8, 14, 23, 32, 41, 42, 33, 24, 15, 9], [12, 20, 29, 38, 47, 48, 39, 30, 21, 13], [16, 17, 27, 34, 44, 52, 46, 38, 29, 26], [18, 19, 25, 24, 33, 43, 51, 45, 37, 28], [22, 31, 30, 39, 49, 55, 50, 40, 32, 23], [34, 35, 36, 37, 45, 54, 58, 57, 53, 44], [40, 50, 56, 59, 58, 54, 51, 43, 42, 41], [46, 52, 53, 57, 59, 56, 55, 49, 48, 47]]
                };
                archimedea["truncated icosahedron"] = {
                    vertices: [[0, 0, 1.021], [0.4035482, 0, 0.9378643], [-0.2274644, 0.3333333, 0.9378643], [-0.1471226, -0.375774, 0.9378643], [0.579632, 0.3333333, 0.7715933], [0.5058321, -0.375774, 0.8033483], [-0.6020514, 0.2908927, 0.7715933], [-0.05138057, 0.6666667, 0.7715933], [0.1654988, -0.6080151, 0.8033483], [-0.5217096, -0.4182147, 0.7715933], [0.8579998, 0.2908927, 0.4708062], [0.3521676, 0.6666667, 0.6884578], [0.7841999, -0.4182147, 0.5025612], [-0.657475, 0.5979962, 0.5025612], [-0.749174, -0.08488134, 0.6884578], [-0.3171418, 0.8302373, 0.5025612], [0.1035333, -0.8826969, 0.5025612], [-0.5836751, -0.6928964, 0.4708062], [0.8025761, 0.5979962, 0.2017741], [0.9602837, -0.08488134, 0.3362902], [0.4899547, 0.8302373, 0.3362902], [0.7222343, -0.6928964, 0.2017741], [-0.8600213, 0.5293258, 0.1503935], [-0.9517203, -0.1535518, 0.3362902], [-0.1793548, 0.993808, 0.1503935], [0.381901, -0.9251375, 0.2017741], [-0.2710537, -0.9251375, 0.3362902], [-0.8494363, -0.5293258, 0.2017741], [0.8494363, 0.5293258, -0.2017741], [1.007144, -0.1535518, -0.06725804], [0.2241935, 0.993808, 0.06725804], [0.8600213, -0.5293258, -0.1503935], [-0.7222343, 0.6928964, -0.2017741], [-1.007144, 0.1535518, 0.06725804], [-0.381901, 0.9251375, -0.2017741], [0.1793548, -0.993808, -0.1503935], [-0.2241935, -0.993808, -0.06725804], [-0.8025761, -0.5979962, -0.2017741], [0.5836751, 0.6928964, -0.4708062], [0.9517203, 0.1535518, -0.3362902], [0.2710537, 0.9251375, -0.3362902], [0.657475, -0.5979962, -0.5025612], [-0.7841999, 0.4182147, -0.5025612], [-0.9602837, 0.08488134, -0.3362902], [-0.1035333, 0.8826969, -0.5025612], [0.3171418, -0.8302373, -0.5025612], [-0.4899547, -0.8302373, -0.3362902], [-0.8579998, -0.2908927, -0.4708062], [0.5217096, 0.4182147, -0.7715933], [0.749174, 0.08488134, -0.6884578], [0.6020514, -0.2908927, -0.7715933], [-0.5058321, 0.375774, -0.8033483], [-0.1654988, 0.6080151, -0.8033483], [0.05138057, -0.6666667, -0.7715933], [-0.3521676, -0.6666667, -0.6884578], [-0.579632, -0.3333333, -0.7715933], [0.1471226, 0.375774, -0.9378643], [0.2274644, -0.3333333, -0.9378643], [-0.4035482, 0, -0.9378643], [0, 0, -1.021]],
                    faces: [[0, 3, 8, 5, 1], [2, 7, 15, 13, 6], [4, 10, 18, 20, 11], [9, 14, 23, 27, 17], [12, 21, 31, 29, 19], [16, 26, 36, 35, 25], [22, 32, 42, 43, 33], [24, 30, 40, 44, 34], [28, 39, 49, 48, 38], [37, 47, 55, 54, 46], [41, 45, 53, 57, 50], [51, 52, 56, 59, 58], [0, 1, 4, 11, 7, 2], [0, 2, 6, 14, 9, 3], [1, 5, 12, 19, 10, 4], [3, 9, 17, 26, 16, 8], [5, 8, 16, 25, 21, 12], [6, 13, 22, 33, 23, 14], [7, 11, 20, 30, 24, 15], [10, 19, 29, 39, 28, 18], [13, 15, 24, 34, 32, 22], [17, 27, 37, 46, 36, 26], [18, 28, 38, 40, 30, 20], [21, 25, 35, 45, 41, 31], [23, 33, 43, 47, 37, 27], [29, 31, 41, 50, 49, 39], [32, 34, 44, 52, 51, 42], [35, 36, 46, 54, 53, 45], [38, 48, 56, 52, 44, 40], [42, 51, 58, 55, 47, 43], [48, 49, 50, 57, 59, 56], [53, 54, 55, 58, 59, 57]]
                };
                archimedea["cuboctahedron"] = {
                    vertices: [[0, 0, 1.154701], [1, 0, 0.5773503], [0.3333333, 0.942809, 0.5773503], [-1, 0, 0.5773503], [-0.3333333, -0.942809, 0.5773503], [1, 0, -0.5773503], [0.6666667, -0.942809, 0], [-0.6666667, 0.942809, 0], [0.3333333, 0.942809, -0.5773503], [-1, 0, -0.5773503], [-0.3333333, -0.942809, -0.5773503], [0, 0, -1.154701]],
                    faces: [[0, 1, 2], [0, 3, 4], [1, 6, 5], [2, 8, 7], [3, 7, 9], [4, 10, 6], [5, 11, 8], [9, 11, 10], [0, 2, 7, 3], [0, 4, 6, 1], [1, 5, 8, 2], [3, 9, 10, 4], [5, 6, 10, 11], [7, 8, 11, 9]]
                };
                archimedea["truncated cuboctahedron"] = {
                    vertices: [[0, 0, 1.024117], [0.4314788, 0, 0.928785], [-0.02106287, 0.4309644, 0.928785], [-0.3410582, -0.2642977, 0.928785], [0.4104159, 0.4309644, 0.833453], [0.7006238, -0.2642977, 0.6986333], [-0.3831839, 0.5976311, 0.7381211], [-0.3919084, -0.6380712, 0.6986333], [-0.7031792, -0.09763107, 0.7381211], [0.6584981, 0.5976311, 0.5079694], [0.6497736, -0.6380712, 0.4684816], [0.948706, -0.09763107, 0.3731496], [-0.4638216, 0.8333333, 0.3731496], [-0.7242421, 0.3333333, 0.6427891], [-0.7540295, -0.4714045, 0.5079694], [-0.1227634, -0.9023689, 0.4684816], [0.5778604, 0.8333333, 0.1429979], [0.9276431, 0.3333333, 0.2778177], [0.8978557, -0.4714045, 0.1429979], [0.3087154, -0.9023689, 0.3731496], [-0.8048797, 0.5690356, 0.2778177], [-0.2157394, 1, 0.04766598], [-0.8470055, -0.5690356, 0.08715377], [-0.2157394, -1, 0.04766598], [0.8470055, 0.5690356, -0.08715377], [0.2157394, 1, -0.04766598], [0.8048797, -0.5690356, -0.2778177], [0.2157394, -1, -0.04766598], [-0.8978557, 0.4714045, -0.1429979], [-0.3087154, 0.9023689, -0.3731496], [-0.9276431, -0.3333333, -0.2778177], [-0.5778604, -0.8333333, -0.1429979], [0.7540295, 0.4714045, -0.5079694], [0.1227634, 0.9023689, -0.4684816], [0.7242421, -0.3333333, -0.6427891], [0.4638216, -0.8333333, -0.3731496], [-0.948706, 0.09763107, -0.3731496], [-0.6497736, 0.6380712, -0.4684816], [-0.6584981, -0.5976311, -0.5079694], [0.7031792, 0.09763107, -0.7381211], [0.3919084, 0.6380712, -0.6986333], [0.3831839, -0.5976311, -0.7381211], [-0.7006238, 0.2642977, -0.6986333], [-0.4104159, -0.4309644, -0.833453], [0.3410582, 0.2642977, -0.928785], [0.02106287, -0.4309644, -0.928785], [-0.4314788, 0, -0.928785], [0, 0, -1.024117]],
                    faces: [[0, 1, 4, 2], [3, 8, 14, 7], [5, 10, 18, 11], [6, 12, 20, 13], [9, 17, 24, 16], [15, 23, 27, 19], [21, 25, 33, 29], [22, 30, 38, 31], [26, 35, 41, 34], [28, 37, 42, 36], [32, 39, 44, 40], [43, 46, 47, 45], [0, 2, 6, 13, 8, 3], [1, 5, 11, 17, 9, 4], [7, 14, 22, 31, 23, 15], [10, 19, 27, 35, 26, 18], [12, 21, 29, 37, 28, 20], [16, 24, 32, 40, 33, 25], [30, 36, 42, 46, 43, 38], [34, 41, 45, 47, 44, 39], [0, 3, 7, 15, 19, 10, 5, 1], [2, 4, 9, 16, 25, 21, 12, 6], [8, 13, 20, 28, 36, 30, 22, 14], [11, 18, 26, 34, 39, 32, 24, 17], [23, 31, 38, 43, 45, 41, 35, 27], [29, 33, 40, 44, 47, 46, 42, 37]]
                };
                archimedea["rhombicuboctahedron"] = {
                    vertices: [[0, 0, 1.070722], [0.7148135, 0, 0.7971752], [-0.104682, 0.7071068, 0.7971752], [-0.6841528, 0.2071068, 0.7971752], [-0.104682, -0.7071068, 0.7971752], [0.6101315, 0.7071068, 0.5236279], [1.04156, 0.2071068, 0.1367736], [0.6101315, -0.7071068, 0.5236279], [-0.3574067, 1, 0.1367736], [-0.7888348, -0.5, 0.5236279], [-0.9368776, 0.5, 0.1367736], [-0.3574067, -1, 0.1367736], [0.3574067, 1, -0.1367736], [0.9368776, -0.5, -0.1367736], [0.7888348, 0.5, -0.5236279], [0.3574067, -1, -0.1367736], [-0.6101315, 0.7071068, -0.5236279], [-1.04156, -0.2071068, -0.1367736], [-0.6101315, -0.7071068, -0.5236279], [0.104682, 0.7071068, -0.7971752], [0.6841528, -0.2071068, -0.7971752], [0.104682, -0.7071068, -0.7971752], [-0.7148135, 0, -0.7971752], [0, 0, -1.070722]],
                    faces: [[0, 2, 3], [1, 6, 5], [4, 9, 11], [7, 15, 13], [8, 16, 10], [12, 14, 19], [17, 22, 18], [20, 21, 23], [0, 1, 5, 2], [0, 3, 9, 4], [0, 4, 7, 1], [1, 7, 13, 6], [2, 5, 12, 8], [2, 8, 10, 3], [3, 10, 17, 9], [4, 11, 15, 7], [5, 6, 14, 12], [6, 13, 20, 14], [8, 12, 19, 16], [9, 17, 18, 11], [10, 16, 22, 17], [11, 18, 21, 15], [13, 15, 21, 20], [14, 20, 23, 19], [16, 19, 23, 22], [18, 22, 23, 21]]
                };

                archimedea["snub cube"] = {
                    vertices: [[0, 0, 1.077364], [0.7442063, 0, 0.7790187], [0.3123013, 0.6755079, 0.7790187], [-0.482096, 0.5669449, 0.7790187], [-0.7169181, -0.1996786, 0.7790187], [-0.1196038, -0.7345325, 0.7790187], [0.6246025, -0.7345325, 0.4806734], [1.056508, -0.1996786, 0.06806912], [0.8867128, 0.5669449, 0.2302762], [0.2621103, 1.042774, 0.06806912], [-0.532287, 0.9342111, 0.06806912], [-1.006317, 0.3082417, 0.2302762], [-0.7020817, -0.784071, 0.2302762], [0.02728827, -1.074865, 0.06806912], [0.6667271, -0.784071, -0.3184664], [0.8216855, -0.09111555, -0.6908285], [0.6518908, 0.6755079, -0.5286215], [-0.1196038, 0.8751866, -0.6168117], [-0.8092336, 0.4758293, -0.5286215], [-0.9914803, -0.2761507, -0.3184664], [-0.4467414, -0.825648, -0.5286215], [0.1926974, -0.5348539, -0.915157], [0.1846311, 0.2587032, -1.029416], [-0.5049987, -0.1406541, -0.9412258]],
                    faces: [[0, 1, 2], [0, 2, 3], [0, 3, 4], [0, 4, 5], [1, 6, 7], [1, 7, 8], [1, 8, 2], [2, 8, 9], [3, 10, 11], [3, 11, 4], [4, 12, 5], [5, 12, 13], [5, 13, 6], [6, 13, 14], [6, 14, 7], [7, 14, 15], [8, 16, 9], [9, 16, 17], [9, 17, 10], [10, 17, 18], [10, 18, 11], [11, 18, 19], [12, 19, 20], [12, 20, 13], [14, 21, 15], [15, 21, 22], [15, 22, 16], [16, 22, 17], [18, 23, 19], [19, 23, 20], [20, 23, 21], [21, 23, 22], [0, 5, 6, 1], [2, 9, 10, 3], [4, 11, 19, 12], [7, 15, 16, 8], [13, 20, 21, 14], [17, 22, 23, 18]]
                };

                archimedea["icosidodecahedron"] = {
                    vertices: [[0, 0, 1.051462], [0.618034, 0, 0.8506508], [0.2763932, 0.5527864, 0.8506508], [-0.618034, 0, 0.8506508], [-0.2763932, -0.5527864, 0.8506508], [1, 0, 0.3249197], [0.7236068, -0.5527864, 0.5257311], [-0.1708204, 0.8944272, 0.5257311], [0.4472136, 0.8944272, 0.3249197], [-1, 0, 0.3249197], [-0.7236068, 0.5527864, 0.5257311], [0.1708204, -0.8944272, 0.5257311], [-0.4472136, -0.8944272, 0.3249197], [1, 0, -0.3249197], [0.8944272, 0.5527864, 0], [0.5527864, -0.8944272, 0], [-0.5527864, 0.8944272, 0], [0.4472136, 0.8944272, -0.3249197], [-1, 0, -0.3249197], [-0.8944272, -0.5527864, 0], [-0.4472136, -0.8944272, -0.3249197], [0.618034, 0, -0.8506508], [0.7236068, -0.5527864, -0.5257311], [0.1708204, -0.8944272, -0.5257311], [-0.7236068, 0.5527864, -0.5257311], [-0.1708204, 0.8944272, -0.5257311], [0.2763932, 0.5527864, -0.8506508], [-0.618034, 0, -0.8506508], [-0.2763932, -0.5527864, -0.8506508], [0, 0, -1.051462]],
                    faces: [[0, 1, 2], [0, 3, 4], [1, 6, 5], [2, 8, 7], [3, 10, 9], [4, 12, 11], [5, 13, 14], [6, 11, 15], [7, 16, 10], [8, 14, 17], [9, 18, 19], [12, 19, 20], [13, 22, 21], [15, 23, 22], [16, 25, 24], [17, 26, 25], [18, 24, 27], [20, 28, 23], [21, 29, 26], [27, 29, 28], [0, 2, 7, 10, 3], [0, 4, 11, 6, 1], [1, 5, 14, 8, 2], [3, 9, 19, 12, 4], [5, 6, 15, 22, 13], [7, 8, 17, 25, 16], [9, 10, 16, 24, 18], [11, 12, 20, 23, 15], [13, 21, 26, 17, 14], [18, 27, 28, 20, 19], [21, 22, 23, 28, 29], [24, 25, 26, 29, 27]]
                };

                archimedea["truncated icosidodecahedron"] = {
                    vertices: [[0, 0, 1.008759], [0.2629922, 0, 0.973874], [-0.00462747, 0.2629515, 0.973874], [-0.2211363, -0.1423503, 0.973874], [0.2583647, 0.2629515, 0.9389886], [0.4673861, -0.1423503, 0.8825429], [-0.2303913, 0.3835526, 0.9041033], [-0.3159502, -0.372678, 0.8825429], [-0.4469001, -0.02174919, 0.9041033], [0.4581312, 0.3835526, 0.8127722], [0.5351104, -0.372678, 0.7696515], [0.6671526, -0.02174919, 0.7563265], [-0.3326926, 0.5786893, 0.7563265], [-0.4515276, 0.2412023, 0.8692179], [-0.541714, -0.2520769, 0.8127722], [-0.248226, -0.6030057, 0.7696515], [0.518368, 0.5786893, 0.6434351], [0.6625252, 0.2412023, 0.7214412], [0.7348768, -0.2520769, 0.6434351], [0.4402965, -0.6030057, 0.6783205], [-0.5538289, 0.436339, 0.7214412], [-0.2724557, 0.7738261, 0.5869894], [-0.6997536, -0.3618034, 0.6301101], [-0.04383203, -0.745356, 0.6783205], [-0.4062656, -0.7127322, 0.5869894], [0.722762, 0.436339, 0.552104], [0.4160667, 0.7738261, 0.4956583], [0.8398294, -0.3618034, 0.4258876], [0.2191601, -0.745356, 0.6434351], [0.5452491, -0.7127322, 0.460773], [-0.7147284, 0.4891254, 0.5172187], [-0.07268925, 0.8944272, 0.460773], [-0.4333553, 0.8266125, 0.3827669], [-0.8606531, -0.309017, 0.4258876], [-0.6320294, -0.5921311, 0.5172187], [-0.2018716, -0.8550825, 0.4956583], [0.8248546, 0.4891254, 0.3129962], [0.1903029, 0.8944272, 0.4258876], [0.5181594, 0.8266125, 0.2565505], [0.9419221, -0.309017, 0.1867798], [0.7450156, -0.5921311, 0.3345566], [0.3241127, -0.8550825, 0.4258876], [-0.8727679, 0.3793989, 0.3345566], [-0.6544916, 0.6842621, 0.3478816], [-0.2335888, 0.9472136, 0.2565505], [-0.7929289, -0.5393447, 0.3129962], [-0.9629544, -0.1138803, 0.2781109], [-0.096919, -0.9648091, 0.2781109], [0.9298072, 0.3793989, 0.09544872], [0.7225533, 0.6842621, 0.1652194], [0.2923956, 0.9472136, 0.1867798], [0.8471082, -0.5393447, 0.09544872], [1.002159, -0.1138803, 0.01744268], [0.1660732, -0.9648091, 0.2432255], [-0.8125311, 0.5745356, 0.1652194], [-0.9675818, 0.1490712, 0.2432255], [-0.1314961, 1, 0.01744268], [-0.8275059, -0.5745356, 0.05232804], [-0.9975315, -0.1490712, 0.01744268], [-0.1314961, -1, 0.01744268], [0.8275059, 0.5745356, -0.05232804], [0.9975315, 0.1490712, -0.01744268], [0.1314961, 1, -0.01744268], [0.8125311, -0.5745356, -0.1652194], [0.9675818, -0.1490712, -0.2432255], [0.1314961, -1, -0.01744268], [-0.8471082, 0.5393447, -0.09544872], [-1.002159, 0.1138803, -0.01744268], [-0.1660732, 0.9648091, -0.2432255], [-0.7225533, -0.6842621, -0.1652194], [-0.9298072, -0.3793989, -0.09544872], [-0.2923956, -0.9472136, -0.1867798], [0.7929289, 0.5393447, -0.3129962], [0.9629544, 0.1138803, -0.2781109], [0.096919, 0.9648091, -0.2781109], [0.6544916, -0.6842621, -0.3478816], [0.8727679, -0.3793989, -0.3345566], [0.2335888, -0.9472136, -0.2565505], [-0.7450156, 0.5921311, -0.3345566], [-0.9419221, 0.309017, -0.1867798], [-0.3241127, 0.8550825, -0.4258876], [-0.8248546, -0.4891254, -0.3129962], [-0.5181594, -0.8266125, -0.2565505], [-0.1903029, -0.8944272, -0.4258876], [0.6320294, 0.5921311, -0.5172187], [0.8606531, 0.309017, -0.4258876], [0.2018716, 0.8550825, -0.4956583], [0.7147284, -0.4891254, -0.5172187], [0.4333553, -0.8266125, -0.3827669], [0.07268925, -0.8944272, -0.460773], [-0.8398294, 0.3618034, -0.4258876], [-0.5452491, 0.7127322, -0.460773], [-0.2191601, 0.745356, -0.6434351], [-0.722762, -0.436339, -0.552104], [-0.4160667, -0.7738261, -0.4956583], [0.6997536, 0.3618034, -0.6301101], [0.4062656, 0.7127322, -0.5869894], [0.04383203, 0.745356, -0.6783205], [0.5538289, -0.436339, -0.7214412], [0.2724557, -0.7738261, -0.5869894], [-0.7348768, 0.2520769, -0.6434351], [-0.4402965, 0.6030057, -0.6783205], [-0.6625252, -0.2412023, -0.7214412], [-0.518368, -0.5786893, -0.6434351], [0.541714, 0.2520769, -0.8127722], [0.248226, 0.6030057, -0.7696515], [0.4515276, -0.2412023, -0.8692179], [0.3326926, -0.5786893, -0.7563265], [-0.6671526, 0.02174919, -0.7563265], [-0.5351104, 0.372678, -0.7696515], [-0.4581312, -0.3835526, -0.8127722], [0.4469001, 0.02174919, -0.9041033], [0.3159502, 0.372678, -0.8825429], [0.2303913, -0.3835526, -0.9041033], [-0.4673861, 0.1423503, -0.8825429], [-0.2583647, -0.2629515, -0.9389886], [0.2211363, 0.1423503, -0.973874], [0.00462747, -0.2629515, -0.973874], [-0.2629922, 0, -0.973874], [0, 0, -1.008759]],
                    faces: [[0, 1, 4, 2], [3, 8, 14, 7], [5, 10, 18, 11], [6, 12, 20, 13], [9, 17, 25, 16], [15, 24, 35, 23], [19, 28, 41, 29], [21, 31, 44, 32], [22, 33, 45, 34], [26, 38, 50, 37], [27, 40, 51, 39], [30, 43, 54, 42], [36, 48, 60, 49], [46, 55, 67, 58], [47, 59, 65, 53], [52, 64, 73, 61], [56, 62, 74, 68], [57, 70, 81, 69], [63, 75, 87, 76], [66, 78, 90, 79], [71, 82, 94, 83], [72, 85, 95, 84], [77, 89, 99, 88], [80, 92, 101, 91], [86, 96, 105, 97], [93, 102, 110, 103], [98, 107, 113, 106], [100, 109, 114, 108], [104, 111, 116, 112], [115, 118, 119, 117], [0, 2, 6, 13, 8, 3], [1, 5, 11, 17, 9, 4], [7, 14, 22, 34, 24, 15], [10, 19, 29, 40, 27, 18], [12, 21, 32, 43, 30, 20], [16, 25, 36, 49, 38, 26], [23, 35, 47, 53, 41, 28], [31, 37, 50, 62, 56, 44], [33, 46, 58, 70, 57, 45], [39, 51, 63, 76, 64, 52], [42, 54, 66, 79, 67, 55], [48, 61, 73, 85, 72, 60], [59, 71, 83, 89, 77, 65], [68, 74, 86, 97, 92, 80], [69, 81, 93, 103, 94, 82], [75, 88, 99, 107, 98, 87], [78, 91, 101, 109, 100, 90], [84, 95, 104, 112, 105, 96], [102, 108, 114, 118, 115, 110], [106, 113, 117, 119, 116, 111], [0, 3, 7, 15, 23, 28, 19, 10, 5, 1], [2, 4, 9, 16, 26, 37, 31, 21, 12, 6], [8, 13, 20, 30, 42, 55, 46, 33, 22, 14], [11, 18, 27, 39, 52, 61, 48, 36, 25, 17], [24, 34, 45, 57, 69, 82, 71, 59, 47, 35], [29, 41, 53, 65, 77, 88, 75, 63, 51, 40], [32, 44, 56, 68, 80, 91, 78, 66, 54, 43], [38, 49, 60, 72, 84, 96, 86, 74, 62, 50], [58, 67, 79, 90, 100, 108, 102, 93, 81, 70], [64, 76, 87, 98, 106, 111, 104, 95, 85, 73], [83, 94, 103, 110, 115, 117, 113, 107, 99, 89], [92, 97, 105, 112, 116, 119, 118, 114, 109, 101]]
                };

                archimedea["rhombicosidodecahedron"] = {
                    vertices: [[0, 0, 1.026054], [0.447838, 0, 0.9231617], [-0.02363976, 0.4472136, 0.9231617], [-0.4050732, 0.190983, 0.9231617], [-0.1693344, -0.4145898, 0.9231617], [0.4241982, 0.4472136, 0.8202696], [0.7673818, 0.190983, 0.6537868], [0.5552827, -0.4145898, 0.7566788], [-0.2312241, 0.7562306, 0.6537868], [-0.5744076, -0.2236068, 0.8202696], [-0.6126576, 0.5, 0.6537868], [0.1738492, -0.6708204, 0.7566788], [-0.4669629, -0.6381966, 0.6537868], [0.493393, 0.7562306, 0.4873039], [0.8748265, -0.2236068, 0.4873039], [0.8365765, 0.5, 0.320821], [0.7054921, -0.6381966, 0.3844118], [0.08831973, 0.9472136, 0.3844118], [-0.5434628, 0.809017, 0.320821], [-0.8866463, -0.1708204, 0.4873039], [-0.9102861, 0.2763932, 0.3844118], [-0.1237794, -0.8944272, 0.4873039], [0.3240586, -0.8944272, 0.3844118], [-0.7792016, -0.5854102, 0.320821], [0.6289922, 0.809017, 0.05144604], [1.010426, -0.1708204, 0.05144604], [0.9867859, 0.2763932, -0.05144604], [0.8410913, -0.5854102, -0.05144604], [-0.223919, 1, 0.05144604], [0.223919, 1, -0.05144604], [-0.8410913, 0.5854102, 0.05144604], [-0.9867859, -0.2763932, 0.05144604], [-1.010426, 0.1708204, -0.05144604], [-0.223919, -1, 0.05144604], [0.223919, -1, -0.05144604], [-0.6289922, -0.809017, -0.05144604], [0.7792016, 0.5854102, -0.320821], [0.9102861, -0.2763932, -0.3844118], [0.8866463, 0.1708204, -0.4873039], [0.5434628, -0.809017, -0.320821], [-0.3240586, 0.8944272, -0.3844118], [0.1237794, 0.8944272, -0.4873039], [-0.7054921, 0.6381966, -0.3844118], [-0.8365765, -0.5, -0.320821], [-0.8748265, 0.2236068, -0.4873039], [-0.08831973, -0.9472136, -0.3844118], [-0.493393, -0.7562306, -0.4873039], [0.4669629, 0.6381966, -0.6537868], [0.6126576, -0.5, -0.6537868], [0.5744076, 0.2236068, -0.8202696], [0.2312241, -0.7562306, -0.6537868], [-0.1738492, 0.6708204, -0.7566788], [-0.5552827, 0.4145898, -0.7566788], [-0.7673818, -0.190983, -0.6537868], [-0.4241982, -0.4472136, -0.8202696], [0.1693344, 0.4145898, -0.9231617], [0.4050732, -0.190983, -0.9231617], [0.02363976, -0.4472136, -0.9231617], [-0.447838, 0, -0.9231617], [0, 0, -1.026054]],
                    faces: [[0, 2, 3], [1, 6, 5], [4, 9, 12], [7, 16, 14], [8, 18, 10], [11, 21, 22], [13, 15, 24], [17, 29, 28], [19, 31, 23], [20, 30, 32], [25, 27, 37], [26, 38, 36], [33, 45, 34], [35, 43, 46], [39, 50, 48], [40, 41, 51], [42, 52, 44], [47, 49, 55], [53, 58, 54], [56, 57, 59], [0, 1, 5, 2], [0, 3, 9, 4], [1, 7, 14, 6], [2, 8, 10, 3], [4, 12, 21, 11], [5, 6, 15, 13], [7, 11, 22, 16], [8, 17, 28, 18], [9, 19, 23, 12], [10, 18, 30, 20], [13, 24, 29, 17], [14, 16, 27, 25], [15, 26, 36, 24], [19, 20, 32, 31], [21, 33, 34, 22], [23, 31, 43, 35], [25, 37, 38, 26], [27, 39, 48, 37], [28, 29, 41, 40], [30, 42, 44, 32], [33, 35, 46, 45], [34, 45, 50, 39], [36, 38, 49, 47], [40, 51, 52, 42], [41, 47, 55, 51], [43, 53, 54, 46], [44, 52, 58, 53], [48, 50, 57, 56], [49, 56, 59, 55], [54, 58, 59, 57], [0, 4, 11, 7, 1], [2, 5, 13, 17, 8], [3, 10, 20, 19, 9], [6, 14, 25, 26, 15], [12, 23, 35, 33, 21], [16, 22, 34, 39, 27], [18, 28, 40, 42, 30], [24, 36, 47, 41, 29], [31, 32, 44, 53, 43], [37, 48, 56, 49, 38], [45, 46, 54, 57, 50], [51, 55, 59, 58, 52]]
                };

                archimedea["snub dodecahedron"] = {
                    vertices: [[0, 0, 1.028031], [0.4638569, 0, 0.9174342], [0.2187436, 0.4090409, 0.9174342], [-0.2575486, 0.3857874, 0.9174342], [-0.4616509, -0.04518499, 0.9174342], [-0.177858, -0.4284037, 0.9174342], [0.5726782, -0.4284037, 0.7384841], [0.8259401, -0.04518499, 0.6104342], [0.6437955, 0.3857874, 0.702527], [0.349648, 0.7496433, 0.6104342], [-0.421009, 0.7120184, 0.6104342], [-0.6783139, 0.3212396, 0.702527], [-0.6031536, -0.4466658, 0.702527], [-0.2749612, -0.7801379, 0.6104342], [0.1760766, -0.6931717, 0.7384841], [0.5208138, -0.7801379, 0.4206978], [0.8552518, -0.4466658, 0.3547998], [1.01294, -0.03548596, 0.1718776], [0.7182239, 0.661842, 0.3208868], [0.3633691, 0.9454568, 0.1758496], [-0.04574087, 0.9368937, 0.4206978], [-0.4537394, 0.905564, 0.1758496], [-0.7792791, 0.5887312, 0.3208868], [-0.9537217, 0.1462217, 0.3547998], [-0.9072701, -0.3283699, 0.3547998], [-0.6503371, -0.7286577, 0.3208868], [0.08459482, -0.9611501, 0.3547998], [0.3949153, -0.9491262, -0.007072558], [0.9360473, -0.409557, -0.1136978], [0.9829382, 0.02692292, -0.2999274], [0.9463677, 0.4014808, -0.007072558], [0.6704578, 0.7662826, -0.1419366], [-0.05007646, 1.025698, -0.04779978], [-0.4294337, 0.8845784, -0.2999274], [-0.9561681, 0.3719321, -0.06525234], [-1.022036, -0.1000338, -0.04779978], [-0.8659056, -0.5502712, -0.06525234], [-0.5227761, -0.8778535, -0.1136978], [-0.06856319, -1.021542, -0.09273844], [0.2232046, -0.8974878, -0.4489366], [0.6515438, -0.7200947, -0.3373472], [0.7969535, -0.3253959, -0.5619888], [0.8066872, 0.4395354, -0.461425], [0.4468035, 0.735788, -0.5619888], [0.001488801, 0.8961155, -0.503809], [-0.3535403, 0.6537658, -0.7102452], [-0.7399517, 0.5547758, -0.4489366], [-0.9120238, 0.1102196, -0.461425], [-0.6593998, -0.6182798, -0.4896639], [-0.2490651, -0.8608088, -0.503809], [0.4301047, -0.5764987, -0.734512], [0.5057577, -0.1305283, -0.8854492], [0.5117735, 0.3422252, -0.8232973], [0.09739587, 0.5771941, -0.8451093], [-0.6018946, 0.2552591, -0.7933564], [-0.6879024, -0.2100741, -0.734512], [-0.3340437, -0.5171509, -0.8232973], [0.08570633, -0.3414376, -0.9658797], [0.1277354, 0.1313635, -1.011571], [-0.3044499, -0.06760332, -0.979586]],
                    faces: [[0, 1, 2], [0, 2, 3], [0, 3, 4], [0, 4, 5], [1, 6, 7], [1, 7, 8], [1, 8, 2], [2, 8, 9], [3, 10, 11], [3, 11, 4], [4, 12, 5], [5, 12, 13], [5, 13, 14], [6, 14, 15], [6, 15, 16], [6, 16, 7], [7, 16, 17], [8, 18, 9], [9, 18, 19], [9, 19, 20], [10, 20, 21], [10, 21, 22], [10, 22, 11], [11, 22, 23], [12, 24, 25], [12, 25, 13], [13, 26, 14], [14, 26, 15], [15, 26, 27], [16, 28, 17], [17, 28, 29], [17, 29, 30], [18, 30, 31], [18, 31, 19], [19, 32, 20], [20, 32, 21], [21, 32, 33], [22, 34, 23], [23, 34, 35], [23, 35, 24], [24, 35, 36], [24, 36, 25], [25, 36, 37], [26, 38, 27], [27, 38, 39], [27, 39, 40], [28, 40, 41], [28, 41, 29], [29, 42, 30], [30, 42, 31], [31, 42, 43], [32, 44, 33], [33, 44, 45], [33, 45, 46], [34, 46, 47], [34, 47, 35], [36, 48, 37], [37, 48, 49], [37, 49, 38], [38, 49, 39], [39, 50, 40], [40, 50, 41], [41, 50, 51], [42, 52, 43], [43, 52, 53], [43, 53, 44], [44, 53, 45], [45, 54, 46], [46, 54, 47], [47, 54, 55], [48, 55, 56], [48, 56, 49], [50, 57, 51], [51, 57, 58], [51, 58, 52], [52, 58, 53], [54, 59, 55], [55, 59, 56], [56, 59, 57], [57, 59, 58], [0, 5, 14, 6, 1], [2, 9, 20, 10, 3], [4, 11, 23, 24, 12], [7, 17, 30, 18, 8], [13, 25, 37, 38, 26], [15, 27, 40, 28, 16], [19, 31, 43, 44, 32], [21, 33, 46, 34, 22], [29, 41, 51, 52, 42], [35, 47, 55, 48, 36], [39, 49, 56, 57, 50], [45, 53, 58, 59, 54]]
                };


                 /**some prism*/
                archimedea["triangular prism"] = {
                    vertices: [[0, 0, 1.322876], [1.309307, 0, 0.1889822], [-0.9819805, 0.8660254, 0.1889822], [0.1636634, -1.299038, 0.1889822], [0.3273268, 0.8660254, -0.9449112], [-0.8183171, -0.4330127, -0.9449112]],
                    faces: [[0, 3, 1], [2, 4, 5], [0, 1, 4, 2], [0, 2, 5, 3], [1, 3, 5, 4]]
                };
                archimedea["pentagonal prism"] = {
                    vertices: [[0, 0, 1.159953], [1.013464, 0, 0.5642542], [-0.3501431, 0.9510565, 0.5642542], [-0.7715208, -0.6571639, 0.5642542], [0.6633206, 0.9510565, -0.03144481], [0.8682979, -0.6571639, -0.3996071], [-1.121664, 0.2938926, -0.03144481], [-0.2348831, -1.063314, -0.3996071], [0.5181548, 0.2938926, -0.9953061], [-0.5850262, -0.112257, -0.9953061]],
                    faces: [[0, 1, 4, 2], [0, 2, 6, 3], [1, 5, 8, 4], [3, 6, 9, 7], [5, 7, 9, 8], [0, 3, 7, 5, 1], [2, 4, 8, 9, 6]]
                };
                archimedea["hexagonal prism"] = {
                    vertices: [[0, 0, 1.118034], [0.8944272, 0, 0.6708204], [-0.2236068, 0.8660254, 0.6708204], [-0.7826238, -0.4330127, 0.6708204], [0.6708204, 0.8660254, 0.2236068], [1.006231, -0.4330127, -0.2236068], [-1.006231, 0.4330127, 0.2236068], [-0.6708204, -0.8660254, -0.2236068], [0.7826238, 0.4330127, -0.6708204], [0.2236068, -0.8660254, -0.6708204], [-0.8944272, 0, -0.6708204], [0, 0, -1.118034]],
                    faces: [[0, 1, 4, 2], [0, 2, 6, 3], [1, 5, 8, 4], [3, 6, 10, 7], [5, 9, 11, 8], [7, 10, 11, 9], [0, 3, 7, 9, 5, 1], [2, 4, 8, 11, 10, 6]]
                };

                /**some johnson*/

                archimedea["square pyramid"] = {
                    vertices: [[-0.729665, 0.670121, 0.319155], [-0.655235, -0.29213, -0.754096], [-0.093922, -0.607123, 0.537818], [0.702196, 0.595691, 0.485187], [0.776626, -0.36656, -0.588064]],
                    faces: [[1, 4, 2], [0, 1, 2], [3, 0, 2], [4, 3, 2], [4, 1, 0, 3]]
                };
                archimedea["pentagonal pyramid"] = {
                    vertices: [[-0.868849, -0.100041, 0.61257], [-0.329458, 0.976099, 0.28078], [-0.26629, -0.013796, -0.477654], [-0.13392, -1.034115, 0.229829], [0.738834, 0.707117, -0.307018], [0.859683, -0.535264, -0.338508]],
                    faces: [[3, 0, 2], [5, 3, 2], [4, 5, 2], [1, 4, 2], [0, 1, 2], [0, 3, 5, 4, 1]]
                };

                archimedea["triangular bipyramid"] = {
                    vertices: [[-0.610389, 0.243975, 0.531213], [-0.187812, -0.48795, -0.664016], [-0.187812, 0.9759, -0.664016], [0.187812, -0.9759, 0.664016], [0.798201, 0.243975, 0.132803]],
                    faces: [[1, 3, 0], [3, 4, 0], [3, 1, 4], [0, 2, 1], [0, 4, 2], [2, 4, 1]]
                };
                archimedea["pentagonal bipyramid"] = {
                    vertices: [[-1.028778, 0.392027, -0.048786], [-0.640503, -0.646161, 0.621837], [-0.125162, -0.395663, -0.540059], [0.004683, 0.888447, -0.651988], [0.125161, 0.395663, 0.540059], [0.632925, -0.791376, 0.433102], [1.031672, 0.157063, -0.354165]],
                    faces: [[3, 2, 0], [2, 1, 0], [2, 5, 1], [0, 4, 3], [0, 1, 4], [4, 1, 5], [2, 3, 6], [3, 4, 6], [5, 2, 6], [4, 5, 6]]
                };
                // archimedea[PolyhedronType.ElongatedSquareDipyramid] = {
                //     vertices: [[-0.669867, 0.334933, -0.529576], [-0.669867, 0.334933, 0.529577], [-0.4043, 1.212901, 0], [-0.334933, -0.669867, -0.529576], [-0.334933, -0.669867, 0.529577], [0.334933, 0.669867, -0.529576], [0.334933, 0.669867, 0.529577], [0.4043, -1.212901, 0], [0.669867, -0.334933, -0.529576], [0.669867, -0.334933, 0.529577]],
                //     faces: [[8, 9, 7], [6, 5, 2], [3, 8, 7], [5, 0, 2], [4, 3, 7], [0, 1, 2], [9, 4, 7], [1, 6, 2], [9, 8, 5, 6], [8, 3, 0, 5], [3, 4, 1, 0], [4, 9, 6, 1]]
                // };
                // archimedea[PolyhedronType.ElongatedPentagonalDipyramid] = {
                //     vertices: [[-0.931836, 0.219976, -0.264632], [-0.636706, 0.318353, 0.692816], [-0.613483, -0.735083, -0.264632], [-0.326545, 0.979634, 0], [-0.318353, -0.636706, 0.692816], [-0.159176, 0.477529, -0.856368], [0.159176, -0.477529, -0.856368], [0.318353, 0.636706, 0.692816], [0.326545, -0.979634, 0], [0.613482, 0.735082, -0.264632], [0.636706, -0.318353, 0.692816], [0.931835, -0.219977, -0.264632]],
                //     faces: [[11, 10, 8], [7, 9, 3], [6, 11, 8], [9, 5, 3], [2, 6, 8], [5, 0, 3], [4, 2, 8], [0, 1, 3], [10, 4, 8], [1, 7, 3], [10, 11, 9, 7], [11, 6, 5, 9], [6, 2, 0, 5], [2, 4, 1, 0], [4, 10, 7, 1]]
                // };
                // archimedea[PolyhedronType.ElongatedPentagonalCupola] = {
                //     vertices: [[-0.93465, 0.300459, -0.271185], [-0.838689, -0.260219, -0.516017], [-0.711319, 0.717591, 0.128359], [-0.710334, -0.156922, 0.080946], [-0.599799, 0.556003, -0.725148], [-0.503838, -0.004675, -0.969981], [-0.487004, 0.26021, 0.48049], [-0.460089, -0.750282, -0.512622], [-0.376468, 0.973135, -0.325605], [-0.331735, -0.646985, 0.084342], [-0.254001, 0.831847, 0.530001], [-0.125239, -0.494738, -0.966586], [0.029622, 0.027949, 0.730817], [0.056536, -0.982543, -0.262295], [0.08085, 1.087391, 0.076037], [0.125583, -0.532729, 0.485984], [0.262625, 0.599586, 0.780328], [0.391387, -0.726999, -0.716259], [0.513854, -0.868287, 0.139347], [0.597475, 0.85513, 0.326364], [0.641224, 0.109523, 0.783723], [0.737185, -0.451155, 0.538891], [0.848705, -0.612742, -0.314616], [0.976075, 0.365067, 0.32976], [1.072036, -0.19561, 0.084927]],
                //     faces: [[15, 18, 21], [12, 20, 16], [6, 10, 2], [3, 0, 1], [9, 7, 13], [2, 8, 4, 0], [0, 4, 5, 1], [1, 5, 11, 7], [7, 11, 17, 13], [13, 17, 22, 18], [18, 22, 24, 21], [21, 24, 23, 20], [20, 23, 19, 16], [16, 19, 14, 10], [10, 14, 8, 2], [15, 9, 13, 18], [12, 15, 21, 20], [6, 12, 16, 10], [3, 6, 2, 0], [9, 3, 1, 7], [9, 15, 12, 6, 3], [22, 17, 11, 5, 4, 8, 14, 19, 23, 24]]
                // };


                let data = archimedea[this.type];

                if (data==null) {
                    logger.c("no internal data associated to the name:"+this.type)
                    return null
                }
                else return Polyhedron.dataToMamesh(data)

            }

        }



        export function getPolyhedronAsync(type:string,callback:(polyhedron:Mamesh)=>void){

            let mamesh=new Polyhedron(type).go()

            if (mamesh!=null) {
                callback(mamesh)
            }
            else{
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function() {
                    if (this.readyState == 4 && this.status == 200) {

                        let mamesh=Polyhedron.dataToMamesh(JSON.parse(this.responseText))
                        callback(mamesh)
                    }
                };
                let str=type.replace(/\s+/g, '-').toLowerCase()
                xhttp.open("GET", "TS/polyhedron/polyhedra/"+str+".json", true);
                xhttp.send();
            }

        }





    }
}
